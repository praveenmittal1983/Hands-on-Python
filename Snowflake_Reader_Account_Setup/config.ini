[EU]
user = XXXXX
password = XXXXX
account = 
warehouse = 
role = ACCOUNTADMIN
db_name = TEST_DB
schema = TEST_SCHEMA
client_name = 
context_id = 
reader_account_admin_email = 
reader_account_db = 

; Setting up Mapping Table
sql_validate_mapping_table = Select count(1) from {db_name}.{schema}.EXT_MAPPING WHERE Context_ID = '{context_id}';
sql_create_mapping_table = CREATE or REPLACE Table {db_name}.{schema}.EXT_MAPPING (Context_ID number(38,0), Client_Name varchar(50), Reader_Account varchar(50));
sql_insert_mapping_table = INSERT INTO {db_name}.{schema}.EXT_MAPPING (Context_ID) values ('{context_id}')
sql_update_mapping_table = Update {db_name}.{schema}.EXT_MAPPING set CLIENT_NAME = '{client_name}', READER_ACCOUNT = '{account}' WHERE CONTEXT_ID = '{context_id}'
sql_grant_mapping_table = grant ownership on table {db_name}.{schema}.EXT_MAPPING to role ACCOUNTADMIN REVOKE CURRENT GRANTS;

; Setting up Provider Account
sql_get_tables = Select TABLE_NAME from information_schema.tables where TABLE_SCHEMA = '{schema}' and TABLE_TYPE = 'BASE TABLE'
sql_select_table = Select count(1) from {db_name}.{schema}.{table_name} limit 1;
sql_create_view = Create or Replace SECURE VIEW {db_name}.{schema}.{view_name} as Select * from {db_name}.{schema}.{table_name} where Context_ID IN (Select Context_ID from {db_name}.{schema}.EXT_MAPPING where reader_account = CURRENT_ACCOUNT())
sql_grant_view = grant select on all views in schema {db_name}.{schema} to ENGINEER;
sql_create_db_role = CREATE or REPLACE DATABASE ROLE EXT_DB_ROLE_CONTEXT_ID_{context_id} COMMENT = 'Database Role for Context ID {context_id}';
sql_grant_db_to_db_role = GRANT USAGE ON DATABASE {db_name} TO DATABASE ROLE {db_name}.EXT_DB_ROLE_CONTEXT_ID_{context_id};
sql_grant_schema_to_db_role = GRANT USAGE ON SCHEMA {db_name}.{schema} TO DATABASE ROLE {db_name}.EXT_DB_ROLE_CONTEXT_ID_{context_id};
sql_grant_view_to_db_role = GRANT SELECT ON VIEW {db_name}.{schema}.{view_name} TO DATABASE ROLE {db_name}.EXT_DB_ROLE_CONTEXT_ID_{context_id};
sql_create_share = CREATE OR REPLACE SHARE EXT_SHARE_CONTEXT_ID_{context_id} COMMENT = 'Share for Context ID {context_id}';
sql_grant_db_to_share = GRANT USAGE ON DATABASE {db_name} TO SHARE EXT_SHARE_CONTEXT_ID_{context_id};
sql_grant_db_role_to_share = GRANT DATABASE ROLE {db_name}.EXT_DB_ROLE_CONTEXT_ID_{context_id} TO SHARE EXT_SHARE_CONTEXT_ID_{context_id};
sql_create_managed_account = CREATE MANAGED ACCOUNT EXT_ACC_CONTEXT_ID_{context_id} ADMIN_NAME = '{user}', ADMIN_PASSWORD = '{password}', TYPE = READER, COMMENT = 'Reader Account for Context ID {context_id}';
sql_alter_share = ALTER SHARE EXT_SHARE_CONTEXT_ID_{context_id} ADD ACCOUNTS={account};

; Setting up Consumer Account
sql_alter_reader_account_admin = ALTER USER {admin_user} SET EMAIL = '{reader_account_admin_email}';
sql_create_rmonitor = Create or replace resource monitor EXT_RMONITOR_{context_id} with credit_quota=10 triggers on 75 percent do notify on 100 percent do suspend on 110 percent do suspend_immediate;
sql_create_warehouse = Create or replace WAREHOUSE EXT_WAREHOUSE_CONTEXT_ID_{context_id} WAREHOUSE_TYPE = STANDARD WAREHOUSE_SIZE = XSMALL AUTO_SUSPEND = 300 AUTO_RESUME = TRUE INITIALLY_SUSPENDED = TRUE RESOURCE_MONITOR = 'EXT_RMONITOR_{context_id}' COMMENT = 'Warehouse for Context ID {context_id}';  
sql_create_role = Create or replace role EXT_ROLE_CONTEXT_ID_{context_id};
sql_create_user = Create or replace user {ext_username} password = '{ext_password}' MUST_CHANGE_PASSWORD = TRUE DEFAULT_ROLE = EXT_ROLE_CONTEXT_ID_{context_id} DEFAULT_WAREHOUSE = EXT_WAREHOUSE_CONTEXT_ID_{context_id} COMMENT='External User for Context ID {context_id}';
sql_grant_role_to_user = GRANT ROLE EXT_ROLE_CONTEXT_ID_{context_id} TO USER EXT_USER_CONTEXT_ID_{context_id};
sql_grant_role_to_warehouse = GRANT USAGE ON WAREHOUSE EXT_WAREHOUSE_CONTEXT_ID_{context_id} TO ROLE EXT_ROLE_CONTEXT_ID_{context_id};
sql_create_db = CREATE DATABASE {reader_account_db} FROM SHARE AXS.AXS_EUROPE.EXT_SHARE_CONTEXT_ID_{context_id};
sql_grant_role_to_db = GRANT IMPORTED PRIVILEGES ON DATABASE {reader_account_db} TO ROLE EXT_ROLE_CONTEXT_ID_{context_id};

; Cleanup commands
sql_del_access_table = Delete from {db_name}.{schema}.EXT_MAPPING where Context_ID = '{context_id}';
sql_del_db_role = Drop database role EXT_DB_ROLE_CONTEXT_ID_{context_id};
sql_del_share = Drop share AXS.AXS_EUROPE.EXT_SHARE_CONTEXT_ID_{context_id};
sql_del_reader_account = Drop managed account EXT_ACC_CONTEXT_ID_{context_id};